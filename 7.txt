
//Program to draw Sierpinski Gasket 
#include<GL/glut.h>
#include<math.h>

void display(void)
{
typedef GLfloat point2[2];
point2 vertices[3]={{25.0,25.0},{50.0,75.0},{75.0,25}};
int i,j,k;
point2 p={55,55};
glClear(GL_COLOR_BUFFER_BIT);
/*Compute and display 1000 new points */
for(k=0;k<=4000;k++)
{
j=rand()%3;
p[0]=(p[0]+vertices[j][0])/2.0;
p[1]=(p[1]+vertices[j][1])/2.0;
glBegin(GL_POINTS);
glVertex2fv(p);
glEnd();
}
glFlush();
}

void init (void)
{
glClearColor(0.0,0.0,1.0,0.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0.0,100.0,0.0,100.0,-1.0,1.0);
glMatrixMode(GL_MODELVIEW);
}

int main(int argc, char** argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
glutInitWindowSize(800,800);
glutInitWindowPosition(100,100);
glutCreateWindow("Sierpinski Gasket");
init();
glutDisplayFunc(display);
glutMainLoop();
return 0;
}

