#include<stdlib.h>
#include<GL/glut.h>
GLsizei winwidth=400,winheight=300;
GLint edgeLength=10;
void init()
{
	glClearColor(0.0,0.0,1.0,1.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0,200.0,0.0,150.0);
}
void displayFcn(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0);
}
void winReshapeFcn(GLint newwidth,GLint newheight)
{
	glViewport(0,0,newwidth,newheight);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0,newwidth,0.0,newheight);
	winwidth=newwidth;
	winheight=newheight;
}
void fillSquare(GLint button,GLint action,GLint xmouse,GLint ymouse)
{
	GLint x1,y1,x2,y2;
	if(button==GLUT_LEFT_BUTTON&&action==GLUT_DOWN)
	{
		x1=xmouse;
		y1=winheight-ymouse;
		x2=x1+edgeLength;
		y2=y1+edgeLength;
		glRecti(x1,y1,x2,y2);
	}
	else if(button==GLUT_RIGHT_BUTTON)
		exit(0);
	glFlush();
}
void enlargeSquare(GLubyte sizeFactor,GLint xmouse,GLint ymouse)
{
	switch(sizeFactor)
	{
	case'2':
		edgeLength*=2;
		break;
	case'3':
		edgeLength*=3;
		break;
   case'4':
		edgeLength*=4;
		break;
   default:
	   break;
	   }
}
void reduceSquare(GLint reductionkey,GLint xmouse,GLint ymouse)
{
	switch(reductionkey)
	{
	case GLUT_KEY_F2:
		edgeLength/=2;
		break;
	case GLUT_KEY_F3:
		edgeLength/=4;
		break;
	default:
		break;
	}
}
void main(int argc,char**argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(winwidth,winheight);
        glutInitWindowPosition(100,100);
	glutCreateWindow("Display square of various sizes");
	init();
	glutDisplayFunc(displayFcn);
	glutReshapeFunc(winReshapeFcn);
	glutMouseFunc(fillSquare);
	glutKeyboardFunc(enlargeSquare);
	glutSpecialFunc(reduceSquare);
	glutMainLoop();
}